
plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.9.0'
    id 'org.jetbrains.grammarkit' version '2021.2.2'
}

group 'io.apimap.intellij'
version '0.1'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.release = 11
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
}

allprojects {
    apply {
        plugin("org.jetbrains.grammarkit")
        plugin("org.jetbrains.intellij")
    }
}

import org.jetbrains.grammarkit.tasks.GenerateLexerTask
import org.jetbrains.grammarkit.tasks.GenerateParserTask

// Metadata
task generateMetadataLexer(type: GenerateLexerTask) {
    source.set('src/main/grammars/ApimapMetadata.flex')
    targetDir.set( 'src/gen/io/apimap/intellij/metadata/')
    targetClass.set('ApimapMetadataFlexLexer')
}

task generateMetadataParser(type: GenerateParserTask) {
    source.set('src/main/grammars/ApimapMetadata.bnf')
    group = "build"
    targetRoot.set("src/gen/")
    pathToParser.set("io/apimap/intellij/metadata/ApimapMetadataParser.java")
    pathToPsiRoot.set("io/apimap/intellij")
}

// Taxonomy
task generateTaxonomyLexer(type: GenerateLexerTask) {
    source.set('src/main/grammars/ApimapTaxonomy.flex')
    targetDir.set( 'src/gen/io/apimap/intellij/taxonomy/')
    targetClass.set('ApimapTaxonomyFlexLexer')
}

task generateTaxonomyParser(type: GenerateParserTask) {
    source.set('src/main/grammars/ApimapTaxonomy.bnf')
    group = "build"
    targetRoot.set("src/gen/")
    pathToParser.set("io/apimap/intellij/taxonomy/ApimapTaxonomyParser.java")
    pathToPsiRoot.set("io/apimap/intellij")
}

compileJava {
    dependsOn generateMetadataLexer
    dependsOn generateMetadataParser
    dependsOn generateTaxonomyLexer
    dependsOn generateTaxonomyParser
}

intellij {
    version = '2022.1.1'
}

sourceSets {
    main {
        java.srcDirs 'src', 'gen'
    }
}

clean.doFirst {
    delete "${rootDir}/src/gen"
}




